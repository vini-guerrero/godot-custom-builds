name: "Environment"
description: "Build Environment"
inputs:
  godot_branch:
    description: "Godot Version"
    required: true
    default: "3.x"
  custom_modules:
    description: "Custom Modules"
    required: false
    default: ""
outputs:
  artifact-path:
    description: "Exported Artifact"
    value: ${{ steps.exported-artifact.outputs.artifact-path }}
runs:
  using: "composite"
  steps:
    - id: custom-modules
      run: |
        if [ "${{ inputs.custom_modules }}" != "" ]; then
          IFS="|" read -a GODOT_CUSTOM_MODULES <<< ${{ inputs.custom_modules }}
          echo -e "âœ” Custom Modules: ${GODOT_CUSTOM_MODULES[@]} - Total ${#GODOT_CUSTOM_MODULES[@]}."
        fi
      shell: bash

    # - id: prepare-environment
    #   run: |
    #     sudo apt-get update &&
    #     sudo apt-get install -y --no-install-recommends curl git python python3-pip python-openssl wget zip unzip mingw-w64 &&
    #     sudo apt-get -y install build-essential pkg-config libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm &&
    #     sudo pip3 install scons &&
    #     sudo python -c "import sys; print(sys.version)" && sudo python --version && sudo scons --version &&
    #     sudo wget https://github.com/godotengine/godot/archive/refs/heads/${{ inputs.godot_branch }}.zip &&
    #     sudo unzip ${{ inputs.godot_branch }}.zip && sudo mv godot-${{ inputs.godot_branch }}/* .
    #   shell: bash

    # - id: compile-engine
    #   run: |
    #     sudo scons -j2 verbose=yes warnings=all werror=yes platform=linuxbsd tools=yes tests=no target=release_debug production=yes
    #   shell: bash

    # - id: exported-artifact
    #   run: |
    #     echo "::set-output name=artifact-path::$(echo bin/godot.x11.opt.tools.64)"
    #   shell: bash
